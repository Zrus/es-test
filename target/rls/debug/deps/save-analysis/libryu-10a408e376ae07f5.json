{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5","program":"C:\\Users\\Zrus\\.rustup\\toolchains\\stable-i686-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","ryu","C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=10a408e376ae07f5","-C","extra-filename=-10a408e376ae07f5","--out-dir","d:\\Workspace\\Rust\\es-test\\target\\rls\\debug\\deps","-L","dependency=d:\\Workspace\\Rust\\es-test\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","integer128","--cfg","maybe_uninit","--error-format=json","--sysroot","C:\\Users\\Zrus\\.rustup/toolchains/stable-i686-pc-windows-msvc"],"output":"d:\\Workspace\\Rust\\es-test\\target\\rls\\debug\\deps\\libryu-10a408e376ae07f5.rmeta"},"prelude":{"crate_id":{"name":"ryu","disambiguator":[5102917595024459714,6605509188407973987]},"crate_root":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src","external_crates":[{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[6764811272097449003,13681722573116367099]}},{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9485826678459717252,15756974541460141494]}},{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15954912595519161470,12922162993496933985]}}],"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":0,"byte_end":5079,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":4924,"byte_end":4930,"line_start":112,"line_end":112,"column_start":25,"column_end":31},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":4932,"byte_end":4937,"line_start":112,"line_end":112,"column_start":33,"column_end":38},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":5057,"byte_end":5065,"line_start":116,"line_end":116,"column_start":29,"column_end":37},"alias_span":null,"name":"format32","value":"","parent":{"krate":0,"index":141}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":5067,"byte_end":5075,"line_start":116,"line_end":116,"column_start":39,"column_end":47},"alias_span":null,"name":"format64","value":"","parent":{"krate":0,"index":141}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":0,"byte_end":5079,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":50},{"krate":0,"index":57},{"krate":0,"index":72},{"krate":0,"index":79},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":105},{"krate":0,"index":115},{"krate":0,"index":138},{"krate":0,"index":141}],"decl_id":null,"docs":" [![github]](https://github.com/dtolnay/ryu)&ensp;[![crates-io]](https://crates.io/crates/ryu)&ensp;[![docs-rs]](https://docs.rs/ryu)","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":4436,"byte_end":4446,"line_start":91,"line_end":91,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":5576,"byte_end":5582,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":15}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":5890,"byte_end":5893,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":5821,"byte_end":5830,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":6861,"byte_end":6867,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <F> (&mut self, f: F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":7933,"byte_end":7946,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"format_finite","qualname":"<Buffer>::format_finite","value":"fn <F> (&mut self, f: F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":7864,"byte_end":7873,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8751,"byte_end":8756,"line_start":114,"line_end":114,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8823,"byte_end":8829,"line_start":118,"line_end":118,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed: Copy","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8845,"byte_end":8857,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"is_nonfinite","qualname":"::buffer::Sealed::is_nonfinite","value":"fn (self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8880,"byte_end":8896,"line_start":120,"line_end":120,"column_start":8,"column_end":24},"name":"format_nonfinite","qualname":"::buffer::Sealed::format_nonfinite","value":"fn (self) -> &'static str","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8934,"byte_end":8953,"line_start":121,"line_end":121,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Sealed::write_to_ryu_buffer","value":"fn (self, result: *mut u8) -> usize","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\pretty\\mod.rs","byte_start":77695,"byte_end":77703,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"name":"format64","qualname":"::pretty::format64","value":"fn (f: f64, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\pretty\\mod.rs","byte_start":77625,"byte_end":77636,"line_start":50,"line_end":50,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\pretty\\mod.rs","byte_start":81636,"byte_end":81644,"line_start":159,"line_end":159,"column_start":15,"column_end":23},"name":"format32","qualname":"::pretty::format32","value":"fn (f: f32, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\pretty\\mod.rs","byte_start":81566,"byte_end":81577,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","byte_start":5023,"byte_end":5026,"line_start":115,"line_end":115,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" Unsafe functions that mirror the API of the C implementation of Ryū.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":5703,"byte_end":5709,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8291,"byte_end":8297,"line_start":92,"line_end":92,"column_start":15,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8317,"byte_end":8323,"line_start":94,"line_end":94,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8418,"byte_end":8424,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":5703,"byte_end":5709,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8291,"byte_end":8297,"line_start":92,"line_end":92,"column_start":15,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":14},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8317,"byte_end":8323,"line_start":94,"line_end":94,"column_start":16,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":14},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8418,"byte_end":8424,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":14},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8758,"byte_end":8764,"line_start":114,"line_end":114,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":29}},{"span":{"file_name":"C:\\Users\\Zrus\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-1.0.5\\src\\buffer\\mod.rs","byte_start":8831,"byte_end":8835,"line_start":118,"line_end":118,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1543},"to":{"krate":0,"index":32}}]}